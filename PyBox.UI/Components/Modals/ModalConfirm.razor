@if (Title != null)
{
    <Modal Title=@Title ConfirmLable=@ConfirmLable ConfirmCssColor=@ButtonColor OnExit=@OnExit>
        <ModalBody>
            @if (Message != null)
            {
                @for (int i = 0; i < messages.Length - 1; i++)
                {
                    @messages[i]

                    <br />
                }
                @messages[messages.Length - 1]
            }
        </ModalBody>
    </Modal>
}

@code {
    #region Inputs
    [Parameter]
    public string? Title { get; set; }
    [Parameter]
    public string? Message { get; set; }
    [Parameter]
    public string ConfirmLable { get; set; } = "Ok";
    [Parameter]
    public string ButtonColor { get; set; } = "primary";
    #endregion

    private string[] messages = new string[0];

    protected override async Task OnInitializedAsync()
    {
        if (Message != null)
            messages = Message.Split('\n');
        await base.OnInitializedAsync();
    }

    #region Outputs
    [Parameter]
    public EventCallback<ModalResult> OnExit { get; set; }
    #endregion
}
