@if (Item != null)
{
    <div class="row gx-1 justify-content-center">
        <div class="col-3">
            <button type="button"
                class="btn mx-auto d-block btn-outline-success btn-sm"
                @onclick="@(() => null)"
                disabled="@(!Item.Enabled)"
                title="Run this script">
                <span class="oi oi-media-play" />
            </button>
        </div>
        <div class="col-3">
    @if (ShowEditButton)
    {
            <button type="button"
                        class="btn mx-auto d-block btn-outline-primary btn-sm"
                @onclick="@(() => OnEdit.InvokeAsync(Item.ScriptId))"
                title="Edit this script">
                <span class="oi oi-pencil" />
            </button>
    }
        </div>
        <div class="col-3">
            <button type="button"
                    class="btn mx-auto d-block @(Item.Enabled ? "btn-outline-warning" : "btn-outline-info") btn-sm"
                @onclick="@(() => OnStatusChange.InvokeAsync(Item))"
                title="@(Item.Enabled ? "Disable this script" : "Enable this script")">
                <span class="oi oi-lock-@(Item.Enabled ? "locked" : "unlocked")" />
            </button>
        </div>
        <div class="col-3">
            <button type="button"
                    class="btn mx-auto d-block btn-outline-danger btn-sm"
                @onclick="@(() => OnDeleteRequest(Item))"
                title="Delete this script">
                <span class="oi oi-trash" />
            </button>
        </div>
    </div>
        @* <Confirm ModalId=@confirmId
            CancellationLable="Confirm"
            ConfirmCssColor="danger"
            Message=@confirmMessage
            OnExit=@OnDeleteConfirmed
        /> *@
}
