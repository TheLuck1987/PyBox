@inject IScriptDataService DataService

@if (items != null)
{
    <h3>Scripts</h3>
    <br />
    <button type="button" class="btn mx-2 btn-primary" title="Create new Script" @onclick=OnCreateRequest><span class="oi oi-plus" /> Create new cript</button>
    <br />
    <br />
    @if (items.Count == 0)
    {
        <p><em>No scripts saved in the database...</em></p>
    }
    else
    {
        <div class="row gx-1 lits-titles">
            <div class="p-2 d-none d-xl-block col-xl-6">
                <div class="row">
                    <div class="p-2 d-none d-xl-block col-xl-4">
                        Title
                    </div>
                    <div class="p-2 d-none d-xl-block col-xl-8">
                        Description
                    </div>
                </div>
            </div>
            <div class="p-2 d-none d-xl-block col-xl-6">
                <div class="row">
                    <div class="p-2 col-xl-1">
                        Status
                    </div>
                    <div class="p-2 col-xl-3">
                        Created
                    </div>
                    <div class="p-2 col-xl-3">
                        Updated
                    </div>
                    <div class="p-2 col-xl-5">
                    </div>
                </div>
            </div>
        </div>
        @foreach (var item in items)
        {
            <div class="row gx-1 list-row align-items-center@(itemOnDeleting != null && itemOnDeleting == item ? " deleting" : !item.Enabled ? " disabled": "")">
                <div class="p-2 col-xl-2 col-lg-4 col-md-12">
                    <span class="d-inline d-xl-none"><ScriptsStatusIcon Item="@item" Deleting=@(itemOnDeleting != null && itemOnDeleting == item) /></span>
                    <span class="item-title">@item.Title</span>
                </div>
                <div class="p-2 col-xl-4 col-lg-8 col-md-12">
                    @item.Description
                </div>
                <div class="p-2 col-xl-6 col-lgx-12">
                    <div class="row gx-1 align-items-center">
                        <div class="p-2 col-xl-1 d-none d-xl-block">
                            <ScriptsStatusIcon Item="@item" Deleting=@(itemOnDeleting != null && itemOnDeleting == item) />
                        </div>
                        <div class="col-xl-3 col-lg-4 col-md-12">
                            <span class="d-inline d-xl-none item-subtitle">Created:</span>
                            <span class="item-date">@item.CreatedAt.ToString("dd/MM/yyyy HH:mm:ss")</span>
                        </div>
                        <div class="col-xl-3 col-lg-5 col-md-12">
                            <span class="d-inline d-xl-none item-subtitle">Updated:</span>
                            <span class="item-date">@(item.UpdatedAt == null ? "-" : ((DateTime)item.UpdatedAt).ToString("dd/MM/yyyy HH:mm:ss"))</span>
                        </div>
                        <div class="col-xl-5 col-lg-3 col-md-12">
                            <ScriptsActions 
                                Item=@item 
                                OnItemDeleting=@OnItemDeleting 
                                OnDeleted=@OnItemDeleted 
                                OnStatusChange=@OnItemStatusChange />
                        </div>
                    </div>
                </div>
            </div>
        }
    }
    @if (showNewScriptModal)
    {
        <ModalForm Title="Create new Script" ConfirmLable="Create" FormObject=@newItem FormAlertClass=@modalErrorClass FormAlertMessage=@modalErrorMessage OnExit=@OnCreateEnd>
            <FormContent>
                <div class="form-group">
                    <label>Title</label>
                    <InputText @bind-Value="newItem!.Title" class="form-control" />
                    <ValidationMessage For="@(() => newItem.Title)" />
                </div>
                <div class="form-group">
                    <label>Description</label>
                    <InputTextArea @bind-Value="newItem.Description" class="form-control" />
                    <ValidationMessage For="@(() => newItem.Description)" />
                </div>
            </FormContent>
            <FormValidator>
                <NewScriptValidatorProvider />
            </FormValidator>
        </ModalForm>
    }
}
